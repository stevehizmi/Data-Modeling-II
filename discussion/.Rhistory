sample <- data.frame(cyl=6,disp=200,hp=120)
predict(lm.mtcars2,sample)
# first use base R read.csv, then convert to tibblex
# row.names=1 means treat first column as row names
# text='....' means use this string of text as the data
mtcars2 = as_tibble(read.csv(
row.names = 1,
text = ",mpg,cyl,disp,hp
Mazda RX4,14.8,6,160,110
Mazda RX4 Wag,14.8,6,160,110
Datsun 710,14.5,4,108,93
Hornet 4 Drive,21.4,6,258,110
Hornet Sportabout,28.1,8,360,175
Valiant,15.7,6,225,105
Duster 360,23.7,8,360,245
Merc 240D,17.6,4,147,62
Merc 230,15.8,4,141,95
Merc 280,13.4,6,168,123
Merc 280C,12,6,168,123
Merc 450SE,17.8,8,276,180
Merc 450SL,18.7,8,276,180
Merc 450SLC,16.6,8,276,180
Cadillac Fleetwood,33.8,8,472,205
Lincoln Continental,32.1,8,460,215
Chrysler Imperial,33.7,8,440,230
Fiat 128,23.3,4,78.7,66
Honda Civic,21.3,4,75.7,52
Toyota Corolla,24.7,4,71.1,65
Toyota Corona,13.7,4,120,97
Dodge Challenger,20.7,8,318,150
AMC Javelin,19.1,8,304,150
Camaro Z28,21.7,8,350,245
Pontiac Firebird,33.2,8,400,175
Fiat X1-9,18.2,4,79,66
Porsche 914-2,18.2,4,120,91
Lotus Europa,21.8,4,95.1,113
Ford Pantera L,24.3,8,351,264
Ferrari Dino,12.9,6,145,175
Maserati Bora,18.6,8,301,335
Volvo 142E,13.6,4,121,109"
))
lm.mtcars2 = lm(data = mtcars2, mpg ~ .)
summary(lm.mtcars2)$coefficients
sample <- data.frame(cyl=6,disp=200,hp=120)
predict(lm.mtcars2,sample)
confint(lm.mtcars2, level = 0.95)
summary(lm.mtcars2)$adj.r.squared
summary(lm.mtcars2)$r.squared
summary(lm.mtcars2)$adj.r.squared
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
library(ISLR)
library(tree)
?Carseats
attach(Carseats)
Low=ifelse(Sales <= 8, "No", "Yes")
High=ifelse(Sales > 8, "No", "Yes")
Carseats = data.frame(Carseats,High)
attach(Carseats)
Low=ifelse(Sales <= 8, "No", "Yes")
High=ifelse(Sales > 8, "No", "Yes")
Carseats = data.frame(Carseats,High,Low)
attach(Carseats)
Low=ifelse(Sales <= 8, "No", "Yes")
High=ifelse(Sales > 8, "No", "Yes")
Carseats = data.frame(Carseats,High,Low)
Carseats
attach(Carseats)
High=ifelse(Sales <= 8, "No", "Yes")
Low=ifelse(Sales > 8, "No", "Yes")
Carseats = data.frame(Carseats,High,Low)
Carseats
attach(Carseats)
Sales=ifelse(Sales <= 8, "Low", "High")
Carseats = data.frame(Carseats,High,Low)
Carseats
attach(Carseats)
Sales=ifelse(Sales <= 8, "Low", "High")
Carseats = data.frame(Carseats,Sales)
Carseats
attach(Carseats)
Sales=ifelse(Sales <= 8, "Low", "High")
Carseats = data.frame(Carseats,Sales)
Carseats
attach(Carseats)
Carseats
Carseats
Carseats %>% case_when(Sales > 8 ~ "High",
Sales <= 8 ~ "Low")
Carseats %>% mutate(Sales = case_when(Sales > 8 ~ "High",
Sales <= 8 ~ "Low"))
High=ifelse(Sales<=8, "Yes")
High=ifelse(Sales<=8,"No", "Yes")
Low =ifelse(Sales>8, "No", "Yes")
High=ifelse(Sales<=8,"No", "Yes")
Low =ifelse(Sales>8, "No", "Yes")
Carseats=data.frame(Carseats,High,Low)
High=ifelse(Sales<=8,"No", "Yes")
Low =ifelse(Sales>8, "No", "Yes")
Carseats=data.frame(Carseats,High,Low)
Carseats
High=ifelse(Sales<=8,"No", "Yes")
Low =ifelse(Sales>8, "No", "Yes")
Carseats=data.frame(Carseats,High,Low)
tree.carseats=tree(High~.-Sales,Carseats)
High=ifelse(Sales<=8,"No", "Yes")
Low =ifelse(Sales>8, "No", "Yes")
Carseats=data.frame(Carseats,High,Low)
tree.carseats=tree(High~.-Sales,Carseats)
summary(tree.carseats)
High=ifelse(Sales<=8,"Low", "High")
Carseats=data.frame(Carseats,High)
tree.carseats=tree(High~.-Sales,Carseats)
summary(tree.carseats)
High=ifelse(Sales<=8,"No", "Yes")
Carseats=data.frame(Carseats,High)
tree.carseats=tree(High~.-Sales,Carseats)
summary(tree.carseats)
attach(Carseats)
attach(Carseats)
High=ifelse(Sales<=8,"No", "Yes")
attach(Carseats)
High=ifelse(Sales<=8,"No", "Yes")
Carseats=data.frame(Carseats,High)
tree.carseats=tree(High~.-Sales,Carseats)
summary(tree.carseats)
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
Carseats = data.frame(Carseats,High)
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
library(ISLR)
library(tree)
?Carseats
attach(Carseats)
High=ifelse(Sales<=8,"No", "Yes")
attach(Carseats)
High=ifelse(Sales<=8,"No", "Yes")
Carseats = data.frame(Carseats,High)
Carseats = data.frame(Carseats,High)
Carseats
attach(Carseats)
Carseats
High=ifelse(Sales<=8,"No", "Yes")
attach(Carseats)
Carseats
High=ifelse(Sales<=8,"Low", "High")
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
library(ISLR)
library(tree)
?Carseats
attach(Carseats)
Carseats
High=ifelse(Sales<=8,"Low", "High")
Carseats = data.frame(Carseats,High)
Carseats
attach(Carseats)
High=ifelse(Sales<=8,"Low", "High")
Carseats = data.frame(Carseats,High)
tree.carseats=tree(High ~.-Sales,Carseats)
Carseats = data.frame(Carseats,High)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
attach(Carseats)
High = as.factor(ifelse(Carseats$Sales<=8, "No", "Yes"))
Carseats$High = High
Carseats = data.frame(Carseats,High)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
Carseats = data.frame(Carseats,High)
Carseats
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
library(ISLR)
library(tree)
?Carseats
attach(Carseats)
High = as.factor(ifelse(Carseats$Sales<=8, "No", "Yes"))
Carseats$High = High
Carseats = data.frame(Carseats,High)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
library(MASS)
library(randomForest)
# ?Boston
Carseats = data.frame(Carseats,High)
tree.carseats=tree(High ~.-Sales,Carseats)
Carseats
summary(tree.carseats)
# if sourced, set working directory to file location
# added tryCatch in case knitting runs into error
tryCatch({
if(Sys.getenv('RSTUDIO')=='1'){
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}}, error = function(e){}
)
# install necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(knitr,tidyverse,ISLR,tree,MASS,randomForest)
knitr::opts_chunk$set(tidy=FALSE,strip.white=FALSE,fig.align="center",comment=" #")
library(ISLR)
library(tree)
?Carseats
attach(Carseats)
High = as.factor(ifelse(Carseats$Sales<=8, "No", "Yes"))
Carseats = data.frame(Carseats,High)
Carseats$High = High
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
library(MASS)
library(randomForest)
# ?Boston
Carseats
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
plot(tree.carseats)
tree.carseats=tree(High ~.-Sales,Carseats)
summary(tree.carseats)
plot(tree.carseats)
text(tree.carseats, pretty=0)
set.seed(2)
train = sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree,pred,High.test)
set.seed(2)
train = sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
set.seed(2)
train = sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
set.seed(2)
train = sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
104+50 / 200
set.seed(2)
train = sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales,Carseats,subset=train)
tree.pred=predict(tree.carseats,Carseats.test,type="class")
table(tree.pred,High.test)
(104+50) / 200
tree.Carseats = tree(Sales~., Carseats, subset=train)
summary(tree.Carseats)
tree.Carseats = tree(Sales~., Carseats, subset=train)
plot(tree.carseats)
summary(tree.Carseats)
tree.Carseats = tree(Sales~., Carseats, subset=train)
plot(tree.carseats,pretty=0)
summary(tree.Carseats)
tree.Carseats = tree(Sales~., Carseats, subset=train)
plot(tree.carseats)
text(tree.Carseats,pretty=0)
summary(tree.Carseats)
tree.Carseats = tree(Sales~., Carseats, subset=train)
plot(tree.carseats)
text(tree.Carseats,pretty=0)
summary(tree.Carseats)
tree.Carseats = tree(Sales~., Carseats, subset=train)
plot(tree.carseats)
text(tree.carseats,pretty=0)
summary(tree.Carseats)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test)^2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"Sales"]
plot(yhat,carseats.test)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test)^2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test))
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
print(yhat)
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
print(carseats.test)
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"medv"]
plot(yhat,carseats.test)
abline(0,1)
Carseats[-train,"medv"]
mean((yhat-carseats.test)**2)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"Sales"]
plot(yhat,carseats.test)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"Sales"]
plot(yhat,carseats.test)
cv.carseats = cv.tree(tree.carseats)
plot(cv.carseats$size,cv.carseats$dev,type='b')
prune.carseats=prune.tree(tree.carseats,best=5)
plot(prune.carseats)
text(prune.carseats,pretty=0)
yhat=predict(tree.carseats,newdata=Carseats[-train,])
carseats.test=Carseats[-train,"Sales"]
abline(0,1)
mean((yhat-carseats.test)**2)
library(MASS)
library(randomForest)
?Boston
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston = tree(meedv~.,Boston,subset=train)
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston = tree(medv~.,Boston,subset=train)
summary(tree.boston)
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
bag.boston
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston,newdata=Boston[-train,])
plot(yhat.bag,boston.test)
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston,newdata=Boston[-train,])
abline(0,1)
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston = tree(medv~.,Boston,subset=train)
boston.test=Boston[-train,"medv"]
summary(tree.boston)
set.seed(1)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston = tree(medv~.,Boston,subset=train)
boston.test = Boston[-train,"medv"]
summary(tree.boston)
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston,newdata=Boston[-train,])
plot(yhat.bag,boston.test)
abline(0,1)
mean((yhat.bag-boston.test)**2)
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
bag.boston
yhat.bag = predict(bag.boston,newdata=Boston[-train,])
plot(yhat.bag,boston.test)
abline(0,1)
mean((yhat.bag-boston.test)**2)
bag.boston=randomForest(medv~., data=Boston, subset=train,mtry=13,importance=TRUE)
yhat.bag = predict(bag.boston,newdata=Boston[-train,])
plot(yhat.bag,boston.test)
abline(0,1)
mean((yhat.bag-boston.test)**2)
importance(bag.boston)
importance(bag.boston)
varImpPlot(bag.boston)
